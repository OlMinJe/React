{"ast":null,"code":"var _jsxFileName = \"/Users/minjelee/Documents/GitHub/web-dev-github/react_01/react_01/src/Components/TOC.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TOC extends Component {\n  render() {\n    console.log(\"TOC remder\");\n    //this.props.data = 'h1'; // 컴포넌트 안의 props 자신을 바꾸는 것은 안된다. (대신 밖에서는 가능 -> state를 이용하여)\n    let data = this.props.data;\n    let lists = [];\n    for (let i = 0; i < data.length; i++) {\n      // 반복하는 경우 각각의 목록을 구별할 수 있는 식별자를 적어줘야 한다. (key)\n      lists.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/content/${data[i].id}`\n          //data-id={data[i].id} // 형식으로 확인할 수 있다. 또한 이 속성을 사용하기 싫은 경우 bind 안에 값으로 넣어준다.\n          ,\n          onClick:\n          // app.js에서 onChangePage 이벤트를 추가해주면 아래의 함수를 원본에 추가해줘야 한다.\n          function (id, e) {\n            // 이때 id값은 bind함수에 id를 두 번쨰 인자에 넣었기 때문에 함수의 첫 번째 매개변수 값으로 넣어줘야 한다.(기존의 값은 뒤로 한 칸씩 밀림)\n            e.preventDefault(); // 링크를 클릭했을 때  페이지가 바뀌는 것을 방지\n            this.props.onChangePage(id); // 클릭 이벤트 발생시키기 위한 함수 호출\n          }.bind(this, data[i].id),\n          children: data[i].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, data[i].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TOC;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","TOC","render","console","log","data","props","lists","i","length","push","children","href","id","onClick","e","preventDefault","onChangePage","bind","title","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/minjelee/Documents/GitHub/web-dev-github/react_01/react_01/src/Components/TOC.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TOC extends Component {\r\n  render() {\r\n    console.log(\"TOC remder\");\r\n    //this.props.data = 'h1'; // 컴포넌트 안의 props 자신을 바꾸는 것은 안된다. (대신 밖에서는 가능 -> state를 이용하여)\r\n    let data = this.props.data;\r\n\r\n    let lists = [];\r\n    for(let i=0; i<data.length; i++){\r\n      // 반복하는 경우 각각의 목록을 구별할 수 있는 식별자를 적어줘야 한다. (key)\r\n      lists.push(\r\n        <li key={data[i].id}>\r\n          <a href={`/content/${data[i].id}`} \r\n            //data-id={data[i].id} // 형식으로 확인할 수 있다. 또한 이 속성을 사용하기 싫은 경우 bind 안에 값으로 넣어준다.\r\n            onClick={\r\n              // app.js에서 onChangePage 이벤트를 추가해주면 아래의 함수를 원본에 추가해줘야 한다.\r\n              function(id, e){ \r\n                // 이때 id값은 bind함수에 id를 두 번쨰 인자에 넣었기 때문에 함수의 첫 번째 매개변수 값으로 넣어줘야 한다.(기존의 값은 뒤로 한 칸씩 밀림)\r\n                e.preventDefault(); // 링크를 클릭했을 때  페이지가 바뀌는 것을 방지\r\n                this.props.onChangePage(id); // 클릭 이벤트 발생시키기 위한 함수 호출\r\n              }.bind(this, data[i].id)}>\r\n            {data[i].title}</a>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return(\r\n      <nav>\r\n        <ul>\r\n          {lists}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TOC;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,MAAMA,CAAA,EAAG;IACPC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB;IACA,IAAIC,IAAI,GAAG,IAAI,CAACC,KAAK,CAACD,IAAI;IAE1B,IAAIE,KAAK,GAAG,EAAE;IACd,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAC;MAC9B;MACAD,KAAK,CAACG,IAAI,eACRV,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAGY,IAAI,EAAG,YAAWP,IAAI,CAACG,CAAC,CAAC,CAACK,EAAG;UAC9B;UAAA;UACAC,OAAO;UACL;UACA,UAASD,EAAE,EAAEE,CAAC,EAAC;YACb;YACAA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAACV,KAAK,CAACW,YAAY,CAACJ,EAAE,CAAC,CAAC,CAAC;UAC/B,CAAC,CAACK,IAAI,CAAC,IAAI,EAAEb,IAAI,CAACG,CAAC,CAAC,CAACK,EAAE,CAAE;UAAAF,QAAA,EAC1BN,IAAI,CAACG,CAAC,CAAC,CAACW;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAVdlB,IAAI,CAACG,CAAC,CAAC,CAACK,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWf,CACN,CAAC;IACH;IAEA,oBACEvB,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAAW,QAAA,EACGJ;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEV;AACF;AAEA,eAAetB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}