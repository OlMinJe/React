{"ast":null,"code":"var _jsxFileName = \"/Users/minjelee/Documents/GitHub/web-dev-github/react_01/react_01/src/App.js\";\nimport React, { Component } from 'react';\n// 파일을 분리해주면 import해줘야 한다.\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\";\nimport CreateContent from \"./components/CreateContent\";\nimport UpdateContent from \"./components/UpdateContent\";\nimport Subject from \"./components/Subject\";\nimport Control from \"./components/Control\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  // props를 사용하기 위한 코드\n  // 내장 객체를 사용하여 state 값을 새로운 값으로 초기화 하기 위해 사용한다. -> 정도로만 이해함 -> 자세한 공부 필요\n  constructor(props) {\n    // 클래스 안의 function은 'function' 키워드를 생략할 수 있다.\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      // state 값을 새로운 값으로 초기화\n      mode: 'create',\n      selected_content_id: 2,\n      subject: {\n        title: \"Web\",\n        sub: \"World Wide Web!\"\n      },\n      welcome: {\n        title: \"Welcome\",\n        desc: \"Hello, React!!\"\n      },\n      // mode가 welcome일때 실행\n      contents: [{\n        id: 1,\n        title: \"HTML\",\n        desc: \"HTML is Information\"\n      }, {\n        id: 2,\n        title: \"CSS\",\n        desc: \"CSS is for design\"\n      }, {\n        id: 3,\n        title: \"JavaScript\",\n        desc: \"JavaScript is for interactive\"\n      }]\n    };\n  }\n  // 위의 state 내용이 바뀔때마다 render()가 다시 실행됨.\n  render() {\n    console.log(\"App render\");\n    let _title,\n      _desc,\n      _article = null;\n\n    // mode 판별해주는 분기문\n    if (this.state.mode === \"welcome\") {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === \"read\") {\n      for (let i = 0; i < this.state.contents.length; i++) {\n        let data = this.state.contents[i];\n        if (data.id === this.state.selected_content_id) {\n          _title = data.title;\n          _desc = data.desc;\n          break;\n        }\n      }\n      // 동시에 밑의 {article} 영역이 바뀌게 해주는 코드\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === \"create\") {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          // setState를 통해서 새로운 컨텐츠를 추가하기\n          this.max_content_id = this.max_content_id + 1;\n          // this.state.contents.push(\n          //   {id:this.max_content_id, title:_title, desc:_desc}\n          // );\n          var _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n          this.setState({\n            contents: _contents\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this);\n    }\n\n    // 하나의 최상위 태그만 사용해야 한다.\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub,\n        onChangePage: function () {\n          // 기존코드 => this.state.mode = 'welcome';\n          // 이걸 추가 안하면 반응 없음\n          // 페이지를 바꾸기 위해 setState값이 바뀌었다는 걸 알려준다.\n          this.setState({\n            mode: \"welcome\"\n          }); // 변경하고 싶은 값을 객체 형태로 알려준다.\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        data: this.state.contents,\n        onChangePage: function (id) {\n          this.setState({\n            mode: \"read\",\n            selected_content_id: Number(id) // id값과 일치하는 content를 출력하기\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), _article]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","TOC","ReadContent","CreateContent","UpdateContent","Subject","Control","jsxDEV","_jsxDEV","App","constructor","props","max_content_id","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","render","console","log","_title","_desc","_article","fileName","_jsxFileName","lineNumber","columnNumber","i","length","data","onSubmit","_contents","concat","setState","bind","children","onChangePage","Number","onChangeMode","_mode"],"sources":["/Users/minjelee/Documents/GitHub/web-dev-github/react_01/react_01/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n// 파일을 분리해주면 import해줘야 한다.\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\"\nimport CreateContent from \"./components/CreateContent\"\nimport UpdateContent from \"./components/UpdateContent\"\nimport Subject from \"./components/Subject\"\nimport Control from \"./components/Control\"\nimport './App.css';\n\nclass App extends Component {\n  // props를 사용하기 위한 코드\n  // 내장 객체를 사용하여 state 값을 새로운 값으로 초기화 하기 위해 사용한다. -> 정도로만 이해함 -> 자세한 공부 필요\n  constructor(props) { // 클래스 안의 function은 'function' 키워드를 생략할 수 있다.\n    super(props); \n    this.max_content_id = 3;\n    this.state = { // state 값을 새로운 값으로 초기화\n      mode:'create',\n      selected_content_id:2,\n      subject: {title: \"Web\", sub: \"World Wide Web!\"},\n      welcome: {title: \"Welcome\", desc: \"Hello, React!!\"}, // mode가 welcome일때 실행\n      contents: [\n        {id: 1, title: \"HTML\", desc:\"HTML is Information\"},\n        {id: 2, title: \"CSS\", desc:\"CSS is for design\"},\n        {id: 3, title: \"JavaScript\", desc:\"JavaScript is for interactive\"}\n      ]\n    };\n  };\n\n  // 위의 state 내용이 바뀔때마다 render()가 다시 실행됨.\n  render() {\n    console.log(\"App render\");\n    let _title, _desc, _article = null;\n\n    // mode 판별해주는 분기문\n    if(this.state.mode === \"welcome\") {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc} />;\n    } else if(this.state.mode === \"read\") {\n      for(let i=0; i<this.state.contents.length; i++){\n        let data = this.state.contents[i];\n        if(data.id === this.state.selected_content_id) {\n          _title = data.title;\n          _desc = data.desc;\n          break;\n        }  \n      }\n      // 동시에 밑의 {article} 영역이 바뀌게 해주는 코드\n      _article = <ReadContent title={_title} desc={_desc} />;\n    } else if(this.state.mode === \"create\") {\n      _article = <CreateContent onSubmit={function(_title, _desc){\n        // setState를 통해서 새로운 컨텐츠를 추가하기\n        this.max_content_id = this.max_content_id+1;\n        // this.state.contents.push(\n        //   {id:this.max_content_id, title:_title, desc:_desc}\n        // );\n        var _contents = this.state.contents.concat(\n          {id:this.max_content_id, title:_title, desc:_desc}\n        )\n        this.setState({\n          contents:_contents\n        });\n      }.bind(this)}></CreateContent>\n    } \n\n    // 하나의 최상위 태그만 사용해야 한다.\n    return(\n      <div>\n        <Subject \n          title={this.state.subject.title} \n          sub={this.state.subject.sub}\n          onChangePage={function(){\n            // 기존코드 => this.state.mode = 'welcome';\n            // 이걸 추가 안하면 반응 없음\n            // 페이지를 바꾸기 위해 setState값이 바뀌었다는 걸 알려준다.\n            this.setState({mode: \"welcome\"}); // 변경하고 싶은 값을 객체 형태로 알려준다.\n          }.bind(this)}\n        />\n        <TOC \n          data={this.state.contents} \n          onChangePage={function(id){\n            this.setState({\n              mode: \"read\",\n              selected_content_id: Number(id) // id값과 일치하는 content를 출력하기\n            });\n          }.bind(this)}\n        />\n        <Control \n          onChangeMode={function(_mode){\n            this.setState({\n              mode:_mode\n            });\n        }.bind(this)}></Control>\n        {_article}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}